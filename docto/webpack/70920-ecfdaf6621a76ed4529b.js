"use strict";(self.webpackChunkdoctolib=self.webpackChunkdoctolib||[]).push([[70920],{754691:(e,t,o)=>{function n(e,t){var o;null===(o=window.crashReporter)||void 0===o||o.captureException(e,t)}o.d(t,{C:()=>n})},559840:(e,t,o)=>{o.r(t),o.d(t,{NativeBridge:()=>s,default:()=>c,parseAndUnescapeProblematicChars:()=>a});var n=o(530079),r=o(754691);function i(e,t,o){return(t=function(e){var t=function(e,t){if("object"!=typeof e||!e)return e;var o=e[Symbol.toPrimitive];if(void 0!==o){var n=o.call(e,t||"default");if("object"!=typeof n)return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===t?String:Number)(e)}(e,"string");return"symbol"==typeof t?t:t+""}(t))in e?Object.defineProperty(e,t,{value:o,enumerable:!0,configurable:!0,writable:!0}):e[t]=o,e}const a=e=>JSON.parse((e=>e.replace(/--antisl--/g,"\\").replace(/--dblquote--/g,'\\"').replace(/--cr--/g,"\\n").replace(/--apos--/g,"'").replace(/\u0000/g,""))(e));class s{constructor(e){var t,o=this;i(this,"handleResponseMessage",(e=>{const t=this.callbacks[e.id];t&&(t(e),delete this.callbacks[e.id])})),i(this,"waitForBridge",(()=>{if(this.bridgeReadyRetryCount++>100){const e=new Error("Waiting for native bridge to be ready indefinitely");return Promise.reject(e)}return new Promise((e=>{var t;null!==(t=this.window.ReactNativeWebView)&&void 0!==t&&t.postMessage||(0,n.KU)()?(this.isReady=!0,this.call({method:"bridgeReady"}),this.outMessages.forEach((e=>this.postMessage(e))),e()):(setTimeout((()=>this.waitForBridge()),200),this.bridgeReadyRetryCount<=1&&new Error(window.ReactNativeWebView?"window.ReactNativeWebView exists but postMessage does not":"window.ReactNativeWebView does not exist"))}))})),i(this,"attemptNativeBridgeNavigation",(e=>{var t,o,n;if(!this.window.DoctolibPatientNativeBridgeNavigation)return!1;if(null===(t=this.window.DoctolibPatientNativeBridgeNavigation)||void 0===t||!t.target)return!1;const r=[null===(o=this.window.DoctolibPatientNativeBridgeNavigation)||void 0===o?void 0:o.target];return null!==(n=this.window.DoctolibPatientNativeBridgeNavigation)&&void 0!==n&&n.targetBaseParams&&r.push(JSON.parse(this.window.DoctolibPatientNativeBridgeNavigation.targetBaseParams)),e&&r.push(e),this.window.DoctolibPatientNativeBridgeNavigation.target=void 0,this.window.DoctolibPatientNativeBridgeNavigation.targetBaseParams=void 0,this.protectedCall({method:"navigateNative",params:r}),!0})),this.messageId=0,this.callbacks={},this.outMessages=[],this.inMessages=[],this.isReady=!1,this.window=e,this.bridgeReadyRetryCount=0,e.DoctolibReactNative={handleResponseMessage:e=>{(0,r.C)(new Error("NativeBridge call intended before the bridge is ready"),{extra:{json:e}})},processMessageFromNative:e=>this.inMessages.push(e)},null!==(t=e.platforms)&&void 0!==t&&t.reactNative&&this.waitForBridge().then((()=>{const t=e=>{let t;try{t=a(e)}catch(t){return void(0,r.C)(new Error("Issue when parsing the response from the bridge"),{extra:{json:e}})}this.handleResponseMessage(t)};if(this.inMessages.forEach(t),e.DoctolibReactNative={handleResponseMessage:t,processMessageFromNative:t=>{const{method:o,params:n}=JSON.parse(t);e.dispatchEvent(new CustomEvent("reactNativeEvent",{detail:{method:o,data:n}}))}},(0,n.lg)()){const e=window.console.log;window.console.log=function(){for(var t=arguments.length,n=new Array(t),r=0;r<t;r++)n[r]=arguments[r];e.apply(window.console,n),o.call({method:"webviewLogs",params:[...n]})}}})).catch((()=>{}))}stubCallsForTests(e){let{method:t,params:o}=e;if((0,n.KU)()){const e="STUBBED_".concat(t),n="".concat(e,"_").concat(JSON.stringify(o)),r=window[n]||window[e];if(r)return new Promise(((e,t)=>{setTimeout((()=>{r.error?t(r.error):e(r.result)}),r.delay||0)}))}}registerMessage(e){var t;const{method:o,params:n}=e,r={id:++this.messageId,method:o,params:n};return null===(t=this.window.crashReporter)||void 0===t||t.addBreadcrumb({category:"native bridge",name:o}),r}call(e){const t=this.registerMessage(e),o=this.stubCallsForTests(e);return o||(this.postMessage(t),new Promise(((e,o)=>{this.callbacks[t.id]=t=>{const{result:n,error:r}=t;r?o(r):e(n)}})))}protectedCall(e){try{const t=this.registerMessage(e),o=this.stubCallsForTests(e);return o?Promise.resolve({status:"success",result:o}):(this.postMessage(t),new Promise((e=>{this.callbacks[t.id]=e})))}catch(e){return Promise.resolve({status:"error",error:e})}}postMessage(e){if(this.isReady)if((0,n.lV)())if((0,n.KU)()){var t;null===(t=this.window.ReactNativeWebView)||void 0===t||t.postMessage(JSON.stringify(e))}else{var o;null===(o=this.window.ReactNativeWebView)||void 0===o||o.postMessage(JSON.stringify(e))}else(0,r.C)(new Error("NativeBridge call from a non native app"));else this.outMessages.push(e)}}const c=new s(window)},322866:(e,t,o)=>{o.r(t),o.d(t,{AccountContext:()=>r,ActiveAgendasContext:()=>oe,ActiveCarePlanContext:()=>re,ActiveMotivesContext:()=>$,AvailabilitiesSearchContext:()=>i,AvailabilityStepContext:()=>De,BilleoReadyContext:()=>a,CalendarActionsContext:()=>se,CalendarHoverContext:()=>le,ClipboardContext:()=>s,CloseOverViewContext:()=>Te,ColumnWidthContext:()=>ke,ConfigurationSettingsContext:()=>ve,ContextMenuContext:()=>Oe,DEFAULT_FORM_CONFIG:()=>Ae,DEFAULT_WORKSTATION_NAVIGATION_CONTEXT:()=>be,DisplayConfirmationWhenInvalidContext:()=>Fe,DmpElectronContext:()=>c,DocumentImportContext:()=>l,EPrescriptionContext:()=>ye,EventsContext:()=>qe,ExperienceContext:()=>Z,FormConfig:()=>Re,FunnelsContext:()=>ee,HttpClientContext:()=>d,INSiAutomaticCallContext:()=>xe,ImportedMedicalHistoryContext:()=>ge,InProgressConsultationContext:()=>C,InProgressConsultationDocumentsContext:()=>v,InProgressConsultationStepContext:()=>me,InProgressPrescriptionsContext:()=>x,InlinePrintPlanningContext:()=>Be,KeyboardShortcutsContext:()=>fe,MailboxSelectedPatientContext:()=>We,MedicalObservationsContext:()=>Ee,ModalStackContext:()=>g,ModalStackStateContext:()=>h,NavigationPanelContext:()=>p,NotesContext:()=>m,OpenPatientsListContext:()=>w,PatientDuplicatesContext:()=>ne,PerformanceTrackingContext:()=>S,QuickAnonymizationContext:()=>f,RequestCreationContext:()=>y,RouterContext:()=>b,SearchContext:()=>Ue,SidebarCollapsedContext:()=>Se,SmartFoldersGlobalContext:()=>ie,TankerContext:()=>E,TankerReadyContext:()=>P,TelehealthAppointmentsContext:()=>ae,TelehealthHubContext:()=>M,TestPdfScreenshotViewerContext:()=>ce,TimelineSearchContext:()=>ue,TlsiContext:()=>Ce,ToastContext:()=>Pe,ToastEntriesContext:()=>Me,TrackingEventDetailsContext:()=>Y,TrackingEventItemContext:()=>Le,UnexpectedEventManagementAppointmentMoveContext:()=>T,UnsavedChangesContext:()=>te,UnseenContext:()=>A,VaccinationFunnelContext:()=>Ve,VaccinationModalContext:()=>Ie,VideoConsultationContext:()=>he,VideoConsultationFeedbackContext:()=>pe,VideoConsultationOpeningsShareContext:()=>we,VitalsContext:()=>ze,WalkmeContext:()=>R,WorkstationNavigationContext:()=>Ne,ZipperContext:()=>O,getInProgressConsultationContextValueToBeUsedOnlyInInProgressConsultationContextProvider:()=>u,queryCacheOptions:()=>L,queryCacheOptionsV5:()=>_,queryClient:()=>W,queryClientDefaultOptions:()=>k,queryClientLogger:()=>q,queryClientV5:()=>G,useRouterContext:()=>N});var n=o(889482);const r=(0,n.createContext)({account:window.current_account||null,fetch:void 0,update:void 0}),i=(0,n.createContext)({}),a=(0,n.createContext)(void 0),s=(0,n.createContext)({}),c=(0,n.createContext)(void 0),l=(0,n.createContext)(void 0),d=(0,n.createContext)(void 0),u=e=>e,C=(0,n.createContext)(void 0),v=(0,n.createContext)(void 0),x=(0,n.createContext)(void 0),g=(0,n.createContext)({}),h=(0,n.createContext)({}),p=(0,n.createContext)({openedNavigationPanel:void 0,toggleNavigationPanel:()=>{},closeNavigationPanel:()=>{}}),m=(0,n.createContext)({}),w=(0,n.createContext)(void 0),f=(0,n.createContext)({get isAnonymized(){throw new Error("QuickAnonymizationContext is not initialized")},isPatientAnonymized(){throw new Error("QuickAnonymizationContext is not initialized")},toggleAnonymization(){throw new Error("QuickAnonymizationContext is not initialized")}}),y=(0,n.createContext)(void 0),b=(0,n.createContext)(void 0),N=()=>{const e=(0,n.useContext)(b);if(void 0===e)throw new Error("Router Context must be used within a RouterContextProvider");return e},E=(0,n.createContext)(void 0),P=(0,n.createContext)({isTankerReady:!1,isLoading:!1,checkTankerReady:()=>Promise.resolve(!1)}),M=(0,n.createContext)([]),T=(0,n.createContext)({appointmentBeingMoved:null,editAppointmentToMove:()=>{},isInLightMode:!1,isMovingAppointments:!1,setAppointmentToMove:()=>{}}),A=(0,n.createContext)(void 0),R=(0,n.createContext)({walkmeReady:!1,setCampaignLaunchedByUser:e=>{}}),O=(0,n.createContext)(null),S=(0,n.createContext)(void 0),k={queries:{refetchOnWindowFocus:!1,retry:!1,networkMode:"offlineFirst"},mutations:{retry:!1,networkMode:"offlineFirst"}};var I=o(265072),B=o(754691),F=o(813870),D=function(e){return e.UserNotLoggedIn="User not logged in",e.AbortError="AbortError",e.TypeError="TypeError",e}(D||{});function U(e){return!!e&&"object"===typeof e&&"name"in e&&"string"===typeof e.name}function V(e){return e.aborted()||function(e){return e.name===D.TypeError&&Boolean(window.unloading)}(e)||function(e){var t;return e.isUnauthorized()&&(null===(t=e.response)||void 0===t||null===(t=t.bodyData)||void 0===t||null===(t=t.meta)||void 0===t?void 0:t.reason)===D.UserNotLoggedIn}(e)}const q={log:()=>null,warn:()=>null,error:()=>null},L={onError:(e,t)=>{if(function(e){return!!e&&e instanceof F.Ay}(e)&&V(e)||function(e){return U(e)&&"BilleoFetchError"===e.name}(e)||function(e){return U(e)&&"RedirectionError"===e.name}(e))return;if(function(e){return Boolean(e.options.onError)}(t)||function(e){var t;return!1===(null===(t=e.options.meta)||void 0===t?void 0:t.sentryOnError)}(t))return;const o=e;o.message=function(e,t){return"Error happened in a react query with queryKey: ".concat(function(e){return e.queryHash.replaceAll('"',"'").replaceAll(",",", ")}(e)," - ").concat(t.message)}(t,o),console.error(JSON.stringify(o,Object.getOwnPropertyNames(o))),(0,B.C)(o)}},z={defaultOptions:k,logger:q,queryCache:new I.QueryCache(L)},W=new I.QueryClient(z);var j=o(887117),K=function(e){return e.UserNotLoggedIn="User not logged in",e.AbortError="AbortError",e.TypeError="TypeError",e}(K||{});function Q(e){return!!e&&"object"===typeof e&&"name"in e&&"string"===typeof e.name}function J(e){return e.aborted()||function(e){return e.name===K.TypeError&&Boolean(window.unloading)}(e)||function(e){var t;return e.isUnauthorized()&&(null===(t=e.response)||void 0===t||null===(t=t.bodyData)||void 0===t||null===(t=t.meta)||void 0===t?void 0:t.reason)===K.UserNotLoggedIn}(e)}const _={onError:(e,t)=>{if(function(e){return!!e&&e instanceof F.Ay}(e)&&J(e)||function(e){return Q(e)&&"BilleoFetchError"===e.name}(e)||function(e){return Q(e)&&"RedirectionError"===e.name}(e))return;if(function(e){var t;return!1===(null===(t=e.options.meta)||void 0===t?void 0:t.sentryOnError)}(t))return;const o=e;o.message=function(e,t){return"Error happened in a react query with queryKey: ".concat(function(e){return e.queryHash.replaceAll('"',"'").replaceAll(",",", ")}(e)," - ").concat(t.message)}(t,o),console.error(JSON.stringify(o,Object.getOwnPropertyNames(o))),(0,B.C)(o)}},H={defaultOptions:k,queryCache:new j.QueryCache(_)},G=new j.QueryClient(H),X=()=>{},Z=(0,n.createContext)(void 0),Y=(0,n.createContext)({}),$=(0,n.createContext)(void 0),ee=(0,n.createContext)(void 0),te=(0,n.createContext)(void 0),oe=(0,n.createContext)(void 0),ne=(0,n.createContext)(void 0),re=(0,n.createContext)(void 0),ie=(0,n.createContext)(void 0),ae=(0,n.createContext)(void 0),se=(0,n.createContext)(void 0),ce=(0,n.createContext)({setShowTestViewer:()=>{},setPdfUrl:()=>{}}),le=(0,n.createContext)(void 0),de={search:"",timelineItems:[],queryParams:{},setQueryParam:X,timelineIsFetched:!1,currentSearch:"",setSearch:X,kind:null,currentKind:null,setKind:X,filter:void 0,currentFilter:void 0,setTimelineFilters:X,filteredTimelineItems:[],isLoading:!1,updateNewDocumentsList:X,newDocumentsList:[]},ue=(0,n.createContext)(de),Ce=(0,n.createContext)(void 0),ve=(0,n.createContext)(void 0),xe=(0,n.createContext)({}),ge=(0,n.createContext)(void 0),he=(0,n.createContext)(void 0),pe=(0,n.createContext)(void 0),me=(0,n.createContext)(void 0),we=(0,n.createContext)([]),fe=(0,n.createContext)({}),ye=(0,n.createContext)({}),be={openDocumentUuid:void 0,setOpenDocumentUuid:X,comfortModeColumn:void 0,setComfortModeColumn:X},Ne=(0,n.createContext)(be),Ee=(0,n.createContext)(void 0),Pe=(0,n.createContext)(null),Me=(0,n.createContext)(null),Te=(0,n.createContext)((()=>null)),Ae={i18nScope:"common",validityIndicators:!0,requiredIndicators:!0,withoutFormTag:!1,horizontal:!0,borderless:!1,onFirstTouch:X},Re=(0,n.createContext)(Ae),Oe=(0,n.createContext)(void 0),Se=(0,n.createContext)(void 0),ke=(0,n.createContext)({}),Ie=(0,n.createContext)({}),Be=(0,n.createContext)(void 0),Fe=(0,n.createContext)(!1),De=(0,n.createContext)(void 0),Ue=(0,n.createContext)(void 0),Ve=(0,n.createContext)({vaccine:void 0,category:void 0}),qe=(0,n.createContext)({openings:[],events:null,isLoading:!1,showEventsLoader:!1,meta:{},fetchEvents:()=>{}}),Le=(0,n.createContext)({}),ze=(0,n.createContext)(void 0),We=(0,n.createContext)({setSelectedPatient:()=>{}})}}]);
//# sourceMappingURL=70920-ecfdaf6621a76ed4529b.js.map